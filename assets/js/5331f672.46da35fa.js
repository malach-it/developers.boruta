"use strict";(self.webpackChunkdevelopers_boruta=self.webpackChunkdevelopers_boruta||[]).push([[9060],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>f});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),l=c(n),g=a,f=l["".concat(s,".").concat(g)]||l[g]||u[g]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d[l]="string"==typeof e?e:a,o[1]=d;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},51599:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var r=n(58168),a=(n(96540),n(15680));const i={},o="Backends configuration | Identity federation",d={unversionedId:"provider-configuration/backends/identity-federation",id:"provider-configuration/backends/identity-federation",title:"Backends configuration | Identity federation",description:"Backends parameters help to manage identity storage and associated features within the server. Those are to keep credentials and identities while providing them abilities helping to manage authorization and authentication provided by identity provider interfaces.",source:"@site/docs/provider-configuration/backends/identity-federation.md",sourceDirName:"provider-configuration/backends",slug:"/provider-configuration/backends/identity-federation",permalink:"/developers.boruta/docs/provider-configuration/backends/identity-federation",draft:!1,editUrl:"https://github.com/malach-it/developers.boruta/tree/master/docs/provider-configuration/backends/identity-federation.md",tags:[],version:"current",frontMatter:{},sidebar:"borutaSidebar",previous:{title:"Backends configuration | Email configuration",permalink:"/developers.boruta/docs/provider-configuration/backends/email-configuration"},next:{title:"Backends configuration | Verifiable credentials",permalink:"/developers.boruta/docs/provider-configuration/backends/verifiable-credentials"}},s={},c=[{value:"Identity federation parameters",id:"identity-federation-parameters",level:2},{value:"Federated server",id:"federated-server",level:3},{value:"Discovery endpoints",id:"discovery-endpoints",level:3},{value:"OpenID endpoints",id:"openid-endpoints",level:3},{value:"User interface",id:"user-interface",level:2}],p={toc:c},l="wrapper";function u(e){let{components:t,...i}=e;return(0,a.yg)(l,(0,r.A)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"backends-configuration--identity-federation"},"Backends configuration | Identity federation"),(0,a.yg)("p",null,"Backends parameters help to ",(0,a.yg)("strong",{parentName:"p"},"manage identity storage and associated features")," within the server. Those are to keep credentials and identities while providing them abilities helping to manage authorization and authentication provided by identity provider interfaces."),(0,a.yg)("admonition",{title:"Parameters sections",type:"note"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("a",{parentName:"p",href:"/docs/provider-configuration/configure-backends"},"Backends")," can be customized through either the Administration API or the user interface providing 6 ",(0,a.yg)("strong",{parentName:"p"},"categories of settings"),":"),(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},"General configuration"),(0,a.yg)("li",{parentName:"ul"},"Type"),(0,a.yg)("li",{parentName:"ul"},"Email configuration"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Identity federation")),(0,a.yg)("li",{parentName:"ul"},"Verifiable credentials"),(0,a.yg)("li",{parentName:"ul"},"User metadata"))),(0,a.yg)("h2",{id:"identity-federation-parameters"},"Identity federation parameters"),(0,a.yg)("div",{class:"parameters"},(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Add federated server")," adds a federated server configuration to the current backend, helping to enable identity federation, using remote authentication methods, with it which can be materialized by a ",(0,a.yg)("a",{parentName:"p",href:"/docs/provider-configuration/configure-identity-providers#global-templates-variables"},'"login with" button'),"."),(0,a.yg)("admonition",{title:"federated server configuration",type:"note"},(0,a.yg)("p",{parentName:"admonition"},"You'll need to fill the ",(0,a.yg)("inlineCode",{parentName:"p"},"redirect_uri")," on the federated server client configuration ",(0,a.yg)("inlineCode",{parentName:"p"},"${BORUTA_OAUTH_HOST}/accounts/backends/:backend_id/:federated_server_name/callback"))),(0,a.yg)("h3",{id:"federated-server"},"Federated server"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Server name")," help to recognize the configured remote authentication server within the administration interface."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Client ID")," is the configured ",(0,a.yg)("inlineCode",{parentName:"p"},"client_id")," on the remote authentication server OAuth client configuration."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Client secret")," is the configured ",(0,a.yg)("inlineCode",{parentName:"p"},"client_secret")," on the remote authentication server OAuth client configuration."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Base URL")," is the base URL used for the interactions with the remote authentication server."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"scope (separated with a whitespace)")," are the scopes that are used in the authorization code grant flow authenticating with the remote server."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Add Federated metadata")," metadata endpoint configuration that help to fetch protected resources using the granted access token."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Metadata endpoint URL")," is the URL where to fetch the user metadata"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Metadata endpoint claims (separated with a whitespace)")," is the list of the jsonpaths used to retreive user metadata. You can use the token ",(0,a.yg)("inlineCode",{parentName:"li"},":all")," to select all current node claims.")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Use OpenID discovery")," define if OpenID discovery is used to fetch server configuration (endpoints)"),(0,a.yg)("admonition",{title:"paths",type:"note"},(0,a.yg)("p",{parentName:"admonition"},"All remote authentication server configuration endpoints can be expressed with either a path relative to the Base URL or with a full URL.")),(0,a.yg)("h3",{id:"discovery-endpoints"},"Discovery endpoints"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Discovery path")," the OpenID discovery path used to fetch server configuration. Configuration is fetched while persisting the backend configuration."),(0,a.yg)("h3",{id:"openid-endpoints"},"OpenID endpoints"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Userinfo path")," the OpenID Userinfo path used to fetch user information."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Authorize path")," the OAuth 2.0 authorize path used to authenticate the current user."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Token path")," the OAuth 2.0 token path used to fetch an ",(0,a.yg)("inlineCode",{parentName:"p"},"access_token")," given an authorization ",(0,a.yg)("inlineCode",{parentName:"p"},"code"),".")),(0,a.yg)("h2",{id:"user-interface"},"User interface"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"backend form",src:n(88741).A,width:"1242",height:"1264"})))}u.isMDXComponent=!0},88741:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/backends-identity-federation-e559aad04e7ea4ce06e2cd7c4bf54787.png"}}]);