"use strict";(self.webpackChunkdevelopers_boruta=self.webpackChunkdevelopers_boruta||[]).push([[9442],{15680:(e,t,r)=>{r.d(t,{xA:()=>d,yg:()=>f});var n=r(96540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=p(r),g=i,f=u["".concat(s,".").concat(g)]||u[g]||l[g]||o;return r?n.createElement(f,a(a({ref:t},d),{},{components:r})):n.createElement(f,a({ref:t},d))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=g;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},18477:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/identity-providers-list-4c4d44e0848b649d18168640f5595e25.png"},21330:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/client-identity-provider-backend-en-e7aa798777ddfc82da73ac608f6ab175.png"},87787:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=r(58168),i=(r(96540),r(15680));const o={},a="Identity providers configuration",c={unversionedId:"provider-configuration/configure-identity-providers",id:"provider-configuration/configure-identity-providers",title:"Identity providers configuration",description:"Identity providers are the server resources helping to customize the end-user authentication interface. Those means of authentication provide customizable flows and interfaces that help to keep the service branding while providing authentication for them in a seamless way. In case of misconfiguration in navigation error from the end-user, fallbacks to error templates are provided to keep a good end-user experience.",source:"@site/docs/provider-configuration/configure-identity-providers.md",sourceDirName:"provider-configuration",slug:"/provider-configuration/configure-identity-providers",permalink:"/developers.boruta/docs/provider-configuration/configure-identity-providers",draft:!1,editUrl:"https://github.com/malach-it/developers.boruta/tree/master/docs/provider-configuration/configure-identity-providers.md",tags:[],version:"current",frontMatter:{},sidebar:"borutaSidebar",previous:{title:"Clients configuration | Grant types",permalink:"/developers.boruta/docs/provider-configuration/clients/grant-types"},next:{title:"Identity providers configuration | General configuration",permalink:"/developers.boruta/docs/provider-configuration/identity-providers/general-configuration"}},s={},p=[{value:"Architecture",id:"architecture",level:2},{value:"Manage through User Interface",id:"manage-through-user-interface",level:2},{value:"Manage through API",id:"manage-through-api",level:2}],d={toc:p},u="wrapper";function l(e){let{components:t,...o}=e;return(0,i.yg)(u,(0,n.A)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"identity-providers-configuration"},"Identity providers configuration"),(0,i.yg)("p",null,"Identity providers are the server resources helping to ",(0,i.yg)("strong",{parentName:"p"},"customize the end-user authentication interface"),". Those means of authentication provide customizable flows and interfaces that help to keep the service branding while providing authentication for them in a seamless way. In case of misconfiguration in navigation error from the end-user, ",(0,i.yg)("strong",{parentName:"p"},"fallbacks to ",(0,i.yg)("a",{parentName:"strong",href:"configuration/error-templates"},"error templates"))," are provided to keep a good end-user experience."),(0,i.yg)("h2",{id:"architecture"},"Architecture"),(0,i.yg)("p",null,"For ",(0,i.yg)("strong",{parentName:"p"},"each client"),", you can configure a specific ",(0,i.yg)("strong",{parentName:"p"},"identity provider"),", that will be associated to a ",(0,i.yg)("strong",{parentName:"p"},"backend"),", helping to ",(0,i.yg)("strong",{parentName:"p"},"provide both authorization and authentication")," for them. This way, each client will have a custom interface as mean of authentication for the end-users."),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Clients, identity providers, and backends",src:r(21330).A,width:"1064",height:"181"})),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"Have a look at ",(0,i.yg)("a",{parentName:"p",href:"/developers.boruta/docs/provider-configuration/configure-clients"},"client configuration"))),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"Have a look at ",(0,i.yg)("a",{parentName:"p",href:"/developers.boruta/docs/provider-configuration/configure-backends"},"backend configuration"))),(0,i.yg)("h2",{id:"manage-through-user-interface"},"Manage through User Interface"),(0,i.yg)("p",null,"The administration interface gives the ability to create, update and delete identity providers. You can access them by navigating to the ",(0,i.yg)("inlineCode",{parentName:"p"},"Identity providers > identity provider list")," section in the sidebar menu."),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"identity provider view",src:r(18477).A,width:"568",height:"191"})),(0,i.yg)("h2",{id:"manage-through-api"},"Manage through API"),(0,i.yg)("p",null,"All identity provider operations are accessible through a REST API following the below description. All identity provider management endpoints are protected with a Bearer token that can be obtained with any OAuth flow. In order to get access, you need to have an access token with the ",(0,i.yg)("a",{parentName:"p",href:"/developers.boruta/docs/provider-configuration/configure-scopes#public-vs-private-scopes"},"private")," scope ",(0,i.yg)("inlineCode",{parentName:"p"},"identity-providers:manage:all")," granted."),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"Have a look at ",(0,i.yg)("a",{parentName:"p",href:"/api/list-identity-providers"},"API documentation"))))}l.isMDXComponent=!0}}]);