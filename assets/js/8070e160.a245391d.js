"use strict";(self.webpackChunkdevelopers_boruta=self.webpackChunkdevelopers_boruta||[]).push([[3822],{15680:(e,t,r)=>{r.d(t,{xA:()=>d,yg:()=>h});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(r),g=a,h=p["".concat(s,".").concat(g)]||p[g]||u[g]||i;return r?n.createElement(h,o(o({ref:t},d),{},{components:r})):n.createElement(h,o({ref:t},d))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},38816:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/issue-hold-verify-63a75b92863383a284131b4746be9561.png"},54369:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(58168),a=(r(96540),r(15680));const i={},o="Quickstart",l={unversionedId:"quickstart",id:"quickstart",title:"Quickstart",description:"The easiest way to try the server is by using docker compose. It helps to compile and run the application along with starting the postgreSQL server dependency within one command. The server will start and expose the different components that will then accessible through a browser or raw HTTP calls.",source:"@site/docs/quickstart.md",sourceDirName:".",slug:"/quickstart",permalink:"/developers.boruta/docs/quickstart",draft:!1,editUrl:"https://github.com/malach-it/developers.boruta/tree/master/docs/quickstart.md",tags:[],version:"current",frontMatter:{},sidebar:"borutaSidebar",previous:{title:"(WIP) boruta identity platform documentation",permalink:"/developers.boruta/docs/intro"},next:{title:"Credentials issuance flow",permalink:"/developers.boruta/docs/credential-issuance"}},s={},c=[{value:"Administration homepage",id:"administration-homepage",level:2},{value:"1. Get the server source code",id:"1-get-the-server-source-code",level:2},{value:"2. Run an instance from docker-compose",id:"2-run-an-instance-from-docker-compose",level:2},{value:"Default admin credentials",id:"default-admin-credentials",level:3},{value:"3. Try Verifiable Credentials flows",id:"3-try-verifiable-credentials-flows",level:2},{value:"3.1 Get a DID services API key",id:"31-get-a-did-services-api-key",level:3},{value:"3.2 Configure the server",id:"32-configure-the-server",level:3},{value:"3.3 Generate client DID",id:"33-generate-client-did",level:3},{value:"3.4 Running the flows",id:"34-running-the-flows",level:3},{value:"3.4.1 Issuing a Verifiable credential",id:"341-issuing-a-verifiable-credential",level:4},{value:"3.4.2 Presenting a Verifiable credential",id:"342-presenting-a-verifiable-credential",level:4}],d={toc:c},p="wrapper";function u(e){let{components:t,...i}=e;return(0,a.yg)(p,(0,n.A)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"quickstart"},"Quickstart"),(0,a.yg)("p",null,"The easiest way to try the server is by ",(0,a.yg)("strong",{parentName:"p"},"using docker compose"),". It helps to ",(0,a.yg)("strong",{parentName:"p"},"compile and run the application")," along with starting the postgreSQL server dependency within one command. The server will start and expose the different ",(0,a.yg)("strong",{parentName:"p"},"components that will then accessible")," through a browser or raw HTTP calls."),(0,a.yg)("h2",{id:"administration-homepage"},"Administration homepage"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"boruta administration homepage",src:r(87760).A,width:"1920",height:"1320"})),(0,a.yg)("h2",{id:"1-get-the-server-source-code"},"1. Get the server source code"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/malach-it/boruta-server.git\n")),(0,a.yg)("h2",{id:"2-run-an-instance-from-docker-compose"},"2. Run an instance from docker-compose"),(0,a.yg)("p",null,"You can build and run the docker images as follow:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"cd ./boruta-server\ndocker compose up\n")),(0,a.yg)("p",null,"The applications will be available on different ports (depending on the docker compose environment configuration):"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"http://localhost:8080"},"http://localhost:8080")," for the authorization server"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"http://localhost:8081"},"http://localhost:8081")," for the admin interface"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"http://localhost:8082"},"http://localhost:8082")," for the gateway"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"http://localhost:8083"},"http://localhost:8083")," for the microgateway")),(0,a.yg)("p",null,"Admin credentials are the one seeded and available in the ",(0,a.yg)("inlineCode",{parentName:"p"},".env.example")," environment file."),(0,a.yg)("h3",{id:"default-admin-credentials"},"Default admin credentials"),(0,a.yg)("p",null,"In order to authenticate to the administration interface you will be asked for credentials that are by default (seeded from environment variables) ",(0,a.yg)("inlineCode",{parentName:"p"},"admin@test.test")," / ",(0,a.yg)("inlineCode",{parentName:"p"},"imaynotknowthat"),"."),(0,a.yg)("h2",{id:"3-try-verifiable-credentials-flows"},"3. Try Verifiable Credentials flows"),(0,a.yg)("h3",{id:"31-get-a-did-services-api-key"},"3.1 Get a DID services API key"),(0,a.yg)("p",null,"boruta uses Universal resolver to generate and resolve DIDs. By default, the server is configured to use ",(0,a.yg)("a",{parentName:"p",href:"https://godiddy.com/"},"Godiddy")," services, you can ",(0,a.yg)("strong",{parentName:"p"},"get an API key")," registering to their services and set the corresponding environment variable in ",(0,a.yg)("inlineCode",{parentName:"p"},".env.example")," file."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-env"},"DID_SERVICES_API_KEY=<Godiddy generated credentials>\n")),(0,a.yg)("h3",{id:"32-configure-the-server"},"3.2 Configure the server"),(0,a.yg)("p",null,'On the administration homepage you can navigate to "Load example configuration" link that enables to display an ',(0,a.yg)("strong",{parentName:"p"},"example configuration to be persisted")," within ",(0,a.yg)("inlineCode",{parentName:"p"},"Configuration > Upload a configuration file"),' section. The configuration file is ready to be used, triggering "Upload configuration" button uploads the configuration and persists it.'),(0,a.yg)("h3",{id:"33-generate-client-did"},"3.3 Generate client DID"),(0,a.yg)("p",null,"Navigating to ",(0,a.yg)("a",{parentName:"p",href:"http://localhost:8081/clients/00000000-0000-0000-0000-000000000001/edit"},"example client edit page"),", in the security section, you have the ability to ",(0,a.yg)("strong",{parentName:"p"},"generate example client DID"),' ("Regenerate client did"). Thiw will generate the DID associated to the client cryptograhic key pair.'),(0,a.yg)("hr",null),(0,a.yg)("div",{class:"centered"},(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Credential flows")),(0,a.yg)("hr",null),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"issue-hold-verify",src:r(38816).A,width:"400",height:"267"}))),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"34-running-the-flows"},"3.4 Running the flows"),(0,a.yg)("p",null,"boruta is intended to implement ",(0,a.yg)("a",{parentName:"p",href:"https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html"},"OpenID 4 Verifiable Credentials Issuance")," and ",(0,a.yg)("a",{parentName:"p",href:"https://openid.net/specs/openid-4-verifiable-presentations-1_0.html"},"OpenID 4 Verifiable Presentations"),". It helps getting Verifiable Credentials and store them within an identity wallet. And then to present them to be validated by the server."),(0,a.yg)("h4",{id:"341-issuing-a-verifiable-credential"},"3.4.1 Issuing a Verifiable credential"),(0,a.yg)("p",null,'On the administration homepage, following "Trigger example pre-authorized code flow with associated boruta wallet (load example data first)" link ',(0,a.yg)("strong",{parentName:"p"},"triggers a Verifiable Credential issuance flow"),'. You can then register for a new account, and follow the tunnel. Through consent, you should see the credential offer page. Follow the "Get your verifiable credential" link and you will be redirected to boruta integrated wallet to store the offered credential.'),(0,a.yg)("h4",{id:"342-presenting-a-verifiable-credential"},"3.4.2 Presenting a Verifiable credential"),(0,a.yg)("p",null,'Back to the administration homepage, you can, after getting the example Verifiable Credential, follow the "Trigger example presentation with associated boruta wallet (issue example credential first)" link. You will be asked to log in and then be redirected to the wallet. Finally, You will be able ',(0,a.yg)("strong",{parentName:"p"},"to present your credential"),"."))}u.isMDXComponent=!0},87760:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/boruta-home-10bf62570d1b90e3418d7333c4530279.png"}}]);