"use strict";(self.webpackChunkdevelopers_boruta=self.webpackChunkdevelopers_boruta||[]).push([[1437],{15680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>d});var n=r(96540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},l="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=s(r),m=o,d=l["".concat(p,".").concat(m)]||l[m]||f[m]||a;return r?n.createElement(d,c(c({ref:t},u),{},{components:r})):n.createElement(d,c({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[l]="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},49987:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=r(58168),o=(r(96540),r(15680));const a={},c="PKCE",i={unversionedId:"specifications/oauth-2.0/pkce",id:"specifications/oauth-2.0/pkce",title:"PKCE",description:"From IETF RFC 7636 -  Proof Key for Code Exchange by OAuth Public Clients",source:"@site/docs/specifications/oauth-2.0/pkce.md",sourceDirName:"specifications/oauth-2.0",slug:"/specifications/oauth-2.0/pkce",permalink:"/developers.boruta/docs/specifications/oauth-2.0/pkce",draft:!1,editUrl:"https://github.com/malach-it/developers.boruta/tree/master/docs/specifications/oauth-2.0/pkce.md",tags:[],version:"current",frontMatter:{}},p={},s=[],u={toc:s},l="wrapper";function f(e){let{components:t,...r}=e;return(0,o.yg)(l,(0,n.A)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"pkce"},"PKCE"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ascii-diagram"},"                                                 +-------------------+\n                                                 |   Authz Server    |\n       +--------+                                | +---------------+ |\n       |        |--(A)- Authorization Request ----\x3e|               | |\n       |        |       + t(code_verifier), t_m  | | Authorization | |\n       |        |                                | |    Endpoint   | |\n       |        |<-(B)---- Authorization Code -----|               | |\n       |        |                                | +---------------+ |\n       | Client |                                |                   |\n       |        |                                | +---------------+ |\n       |        |--(C)-- Access Token Request ----\x3e|               | |\n       |        |          + code_verifier       | |    Token      | |\n       |        |                                | |   Endpoint    | |\n       |        |<-(D)------ Access Token ---------|               | |\n       +--------+                                | +---------------+ |\n                                                 +-------------------+\n")),(0,o.yg)("p",null,(0,o.yg)("em",{parentName:"p"},"From IETF ",(0,o.yg)("a",{parentName:"em",href:"https://datatracker.ietf.org/doc/html/rfc7636"},"RFC 7636 -  Proof Key for Code Exchange by OAuth Public Clients"))))}f.isMDXComponent=!0}}]);