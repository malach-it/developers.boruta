"use strict";(self.webpackChunkdevelopers_boruta=self.webpackChunkdevelopers_boruta||[]).push([[1544],{15680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>f});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),d=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(a),u=n,f=c["".concat(s,".").concat(u)]||c[u]||g[u]||i;return a?r.createElement(f,o(o({ref:t},p),{},{components:a})):r.createElement(f,o({ref:t},p))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:n,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},40973:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=a(58168),n=(a(96540),a(15680));const i={},o="Backends configuration | Verifiable Credentials",l={unversionedId:"provider-configuration/backends/verifiable-credentials",id:"provider-configuration/backends/verifiable-credentials",title:"Backends configuration | Verifiable Credentials",description:"Backends parameters help to manage identity storage and associated features within the server. Those are to keep credentials and identities while providing them abilities helping to manage authorization and authentication provided by the identity provider interfaces.",source:"@site/docs/provider-configuration/backends/verifiable-credentials.md",sourceDirName:"provider-configuration/backends",slug:"/provider-configuration/backends/verifiable-credentials",permalink:"/developers.boruta/docs/provider-configuration/backends/verifiable-credentials",draft:!1,editUrl:"https://github.com/malach-it/developers.boruta/tree/master/docs/provider-configuration/backends/verifiable-credentials.md",tags:[],version:"current",frontMatter:{},sidebar:"borutaSidebar",previous:{title:"Backends configuration | Identity federation",permalink:"/developers.boruta/docs/provider-configuration/backends/identity-federation"},next:{title:"Backends configuration | User metadata",permalink:"/developers.boruta/docs/provider-configuration/backends/user-metadata"}},s={},d=[{value:"Verifiable credentials parameters",id:"verifiable-credentials-parameters",level:2},{value:"Verifiable Credentials Issuance",id:"verifiable-credentials-issuance",level:3},{value:"Claims",id:"claims",level:4},{value:"Display",id:"display",level:4},{value:"Verifiable Presentations",id:"verifiable-presentations",level:3},{value:"User interface",id:"user-interface",level:2}],p={toc:d},c="wrapper";function g(e){let{components:t,...i}=e;return(0,n.yg)(c,(0,r.A)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"backends-configuration--verifiable-credentials"},"Backends configuration | Verifiable Credentials"),(0,n.yg)("p",null,"Backends parameters help to ",(0,n.yg)("strong",{parentName:"p"},"manage identity storage and associated features")," within the server. Those are to keep credentials and identities while providing them abilities helping to manage authorization and authentication provided by the identity provider interfaces."),(0,n.yg)("admonition",{title:"Parameters sections",type:"note"},(0,n.yg)("p",{parentName:"admonition"},(0,n.yg)("a",{parentName:"p",href:"/docs/provider-configuration/configure-backends"},"Backends")," can be customized through either the Administration API or the user interface providing 6 ",(0,n.yg)("strong",{parentName:"p"},"categories of settings"),":"),(0,n.yg)("ul",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ul"},"General configuration"),(0,n.yg)("li",{parentName:"ul"},"Type"),(0,n.yg)("li",{parentName:"ul"},"Email configuration"),(0,n.yg)("li",{parentName:"ul"},"Identity federation"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Verifiable credentials")),(0,n.yg)("li",{parentName:"ul"},"User metadata"))),(0,n.yg)("h2",{id:"verifiable-credentials-parameters"},"Verifiable credentials parameters"),(0,n.yg)("div",{class:"parameters"},(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Add Verifiable credential")," exposes a Verifiable Credential for the client, provided its ",(0,n.yg)("a",{parentName:"p",href:"/docs/provider-configuration/backends/verifiable-credentials#verifiable-credentials-issuance"},"configuration"),"."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Add Verifiable presentation")," enable the users to present Verifiable Credentials, given their ",(0,n.yg)("a",{parentName:"p",href:"/docs/provider-configuration/backends/verifiable-credentials#verifiable-presentations"},"definition"),"."),(0,n.yg)("h3",{id:"verifiable-credentials-issuance"},"Verifiable Credentials Issuance"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Credential identifier")," the identifier used to identify the credential within the issuance protocols. Would be accessible through ",(0,n.yg)("inlineCode",{parentName:"p"},"presentation_details")," or an OAuth scope. The latter overiding the other."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Verifiable credential type")," would set the ",(0,n.yg)("inlineCode",{parentName:"p"},"vct")," claim in Verifiable Credentials depending their format."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Version")," the OpenID 4 Verifiable Credentials Issuance version used to expose the credential. Would be one of:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Draft 11")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Draft 13"))),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Format")," would be the format of the exposed credential."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"jwt_vc")," from ",(0,n.yg)("a",{parentName:"li",href:"https://www.w3.org/TR/vc-data-model-1.0"},"W3C Verifiable Credential Data Model 1.0")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"jwt_vc_json")," from ",(0,n.yg)("a",{parentName:"li",href:"https://www.w3.org/TR/vc-data-model-1.0"},"W3C Verifiable Credential Data Model 1.0")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"vc+sd-jwt")," from ",(0,n.yg)("a",{parentName:"li",href:"https://www.ietf.org/archive/id/draft-ietf-oauth-sd-jwt-vc-08.html"},"SD-JWT-based Verifiable Credentials"))),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Defered")," define whenever the credential issuance is deffered or not."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Types (separated with a whitespace)")," the types used to identify the credential within the issuance protocols."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Time to live (in seconds)")," the time to live of the overall credential, defining its expiration."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Add claim")," would add a claim containing identity information to the credential."),(0,n.yg)("h4",{id:"claims"},"Claims"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Type")," the type of the current node in the claim tree."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"attribute")," would be a standard attribute"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"object")," would be an object giving the ability to have children claims"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"array")," would be an array containing different claims")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Name")," would be the name of the claim giving the ",(0,n.yg)("inlineCode",{parentName:"p"},"key")," of the attribute."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Label")," would be a friendly labeling of the claim, stated in the ",(0,n.yg)("inlineCode",{parentName:"p"},"display")," of exposed supported credentials."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Pointer")," would give the way to access the claim ",(0,n.yg)("inlineCode",{parentName:"p"},"value")," within the current resource owner claims."),(0,n.yg)("h4",{id:"display"},"Display"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Name")," would be the display name of the credential."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Background color")," would give the background color of the displayed credential card."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Text color")," would give the text color of the displayed credential card."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Logo URL")," would give the logo URL of the displayed credential card."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Logo alt text")," would give the logo alternative text of the displayed credential card."),(0,n.yg)("h3",{id:"verifiable-presentations"},"Verifiable Presentations"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Presentation identifier")," the identifier of the presentation that would be requested while asking to request a credential presentation."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Presentation definition")," the given definition of the requested presentation to be validated.")),(0,n.yg)("h2",{id:"user-interface"},"User interface"),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"backend form",src:a(58383).A,width:"1250",height:"2612"})))}g.isMDXComponent=!0},58383:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/backends-verifiable-credentials-770ca27f90cc53173ce0038addac2d54.png"}}]);